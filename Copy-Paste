bash -c 'set -euo pipefail; pm=""; if command -v apt >/dev/null 2>&1; then pm="apt"; elif command -v dnf >/dev/null 2>&1; then pm="dnf"; elif command -v pacman >/dev/null 2>&1; then pm="pacman"; else echo "Unsupported distro: need apt, dnf or pacman" >&2; exit 1; fi; echo "[1/6] Installing packages (sudo required)"; if [ "$pm" = "apt" ]; then sudo apt update && sudo apt install -y xorg xinit openbox sxhkd dmenu xdotool wmctrl xterm; elif [ "$pm" = "dnf" ]; then sudo dnf install -y @base-x xorg-x11-xinit openbox sxhkd dmenu xdotool wmctrl xterm; elif [ "$pm" = "pacman" ]; then sudo pacman --noconfirm -Syu xorg-server xorg-xinit openbox sxhkd dmenu xdotool wmctrl xterm; fi; echo "[2/6] Creating folders"; mkdir -p "$HOME/.config/sxhkd" "$HOME/.config/lightningde" "$HOME/.local/bin"; echo "[3/6] Writing launcher"; cat > "$HOME/.local/bin/lightning-launcher" <<'\LAUNCH'\n#!/usr/bin/env bash\nset -euo pipefail\nprompt() { dmenu -i -p "$1"; }\nmsg() { printf "%s\n" "$@" | dmenu -i -p "$1"; }\nrun_cmd() { setsid -f \"$1\" >/dev/null 2>&1 < /dev/null & }\nchoose_from() { local title=\"$1\"; shift; local -a items=(\"$@\"); [ \"${#items[@]}\" -gt 0 ] || { msg \"$title\" \"No options\" >/dev/null; exit 0; }; local menu=\"\" i=1; for c in \"${items[@]}\"; do menu+=\"$i) $c\n\"; ((i++)); done; local pick; pick=$(printf \"%s\" \"$menu\" | dmenu -i -l 15 -p \"$title\") || exit 0; pick=${pick%%)*}; pick=${pick// /}; if [[ \"$pick\" =~ ^[0-9]+$ ]] && [ \"$pick\" -ge 1 ] && [ \"$pick\" -le ${#items[@]} ]; then echo \"${items[$((pick-1))]}\"; fi; }\nif [ \"${1:-}\" = \"--raw\" ]; then prompt \"LightningDE\"; exit 0; fi\nq=$(prompt \"LightningDE:\"); [ -n \"$q\" ] || exit 0\nif [ \"$q\" = \"browser\" ] || [[ \"$q\" =~ ^[Bb]rowsers?$ ]]; then\n  declare -a cand=( firefox zen-browser librewolf google-chrome-stable google-chrome chromium microsoft-edge-stable microsoft-edge brave vivaldi opera );\n  declare -a found=(); for c in \"${cand[@]}\"; do command -v \"$c\" >/dev/null 2>&1 && found+=(\"$c\"); done\n  sel=$(choose_from \"Browsers\" \"${found[@]}\") || exit 0; [ -n \"$sel\" ] && run_cmd \"$sel\"; exit 0\nfi\n# Try .desktop apps first (grep Exec line), fallback to raw command\nif compgen -G \"/usr/share/applications/*.desktop\" >/dev/null || compgen -G \"$HOME/.local/share/applications/*.desktop\" >/dev/null; then\n  apps=$(grep -h \"^Name=\\|^Exec=\" /usr/share/applications/*.desktop $HOME/.local/share/applications/*.desktop 2>/dev/null | awk -F= \'\n    /^Name=/{name=$2}\n    /^Exec=/{exec=$2; gsub(/ %.*/,\"\",exec); if(name!=\"\" && exec!=\"\"){print name \" :: \" exec; name=\"\"; exec=\"\"}}\n  \' | sort -u)\n  sel=$(printf \"%s\n\" \"$apps\" | dmenu -i -l 20 -p \"Apps (Name :: Exec)\" ) || exit 0\n  cmd=${sel##*:: }; [ -n \"$cmd\" ] && run_cmd \"$cmd\" && exit 0\nfi\n# Fallback: run typed command\nrun_cmd \"$q\"\n\LAUNCH\nchmod +x "$HOME/.local/bin/lightning-launcher"; echo "[4/6] Writing power helper"; cat > "$HOME/.local/bin/lightning-power" <<'\POWER'\n#!/usr/bin/env bash\nset -euo pipefail\nask() { printf \"%s\\n\" \"$1 [yes/no]\" | dmenu -i -p \"LightningDE\"; }\naction=${1:-}\ncase \"$action\" in\n  shutdown)\n    [ \"$(ask Shutdown?)\" = \"yes\" ] && { command -v systemctl >/dev/null && systemctl poweroff || sudo poweroff; } ;;\n  reboot)\n    [ \"$(ask Reboot?)\" = \"yes\" ] && { command -v systemctl >/dev/null && systemctl reboot || sudo reboot; } ;;\n  kill)\n    [ \"$(ask Nuke session? (kills user processes))\" = \"yes\" ] && pkill -KILL -u \"$USER\" || true ;;\n  logout)\n    [ \"$(ask Log out of X?)\" = \"yes\" ] && { command -v openbox >/dev/null && openbox --exit || pkill -KILL -t \"$(tty)\"; } ;;\n  *)\n    printf \"Usage: %s {shutdown|reboot|kill|logout}\\n\" \"$0\" ;;\nesac\n\POWER\nchmod +x "$HOME/.local/bin/lightning-power"; echo "[5/6] Writing sxhkdrc"; cat > "$HOME/.config/sxhkd/sxhkdrc" <<'\SXHKD'\n# LightningDE keys\nsuper + q\n  $HOME/.local/bin/lightning-launcher\nsuper + t\n  xterm\nsuper + c\n  xdotool getactivewindow windowkill\nsuper + m\n  wmctrl -r :ACTIVE: -b add,maximized_vert,maximized_horz\nsuper + u\n  wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz\nsuper + g\n  wmctrl -k toggle\nsuper + y\n  xdotool getactivewindow windowminimize\nsuper + a\n  wmctrl -l | awk \"{print \\$1}\" | xargs -r -n1 wmctrl -ic\nsuper + d\n  $HOME/.local/bin/lightning-power shutdown\nsuper + r\n  $HOME/.local/bin/lightning-power reboot\nsuper + l\n  $HOME/.local/bin/lightning-power kill\n# Bonus: quick raw prompt to run any command\nsuper + Return\n  sh -c '\''cmd=$($HOME/.local/bin/lightning-launcher --raw); [ -n \"$cmd\" ] && setsid -f \"$cmd\"'\''\n\SXHKD\necho "[6/6] Writing session + xinitrc"; cat > "$HOME/.local/bin/lightning-session" <<'\SESS'\n#!/usr/bin/env bash\nset -euo pipefail\nxsetroot -solid black\n(setsid -f sxhkd >/dev/null 2>&1 &)\nexec openbox\n\SESS\nchmod +x "$HOME/.local/bin/lightning-session"; cat > "$HOME/.xinitrc" <<'\XRC'\n#!/usr/bin/env bash\nexec $HOME/.local/bin/lightning-session\n\XRC\nchmod +x "$HOME/.xinitrc"; echo \"Done. Start with: startx  (black screen). Use keys: Super+Q (launcher), Super+T (terminal), Super+C (close), Super+M/U (max/unmax), Super+G (show desktop), Super+Y (minimize), Super+A (close all), Super+D (shutdown), Super+R (reboot), Super+L (nuke session).\"'
